// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module cnn_cnn_Pipeline_VITIS_LOOP_21_210 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        local_input_61_address0,
        local_input_61_ce0,
        local_input_61_we0,
        local_input_61_d0,
        local_input_62_address0,
        local_input_62_ce0,
        local_input_62_we0,
        local_input_62_d0,
        local_input_63_address0,
        local_input_63_ce0,
        local_input_63_we0,
        local_input_63_d0,
        local_input_64_address0,
        local_input_64_ce0,
        local_input_64_we0,
        local_input_64_d0,
        local_input_65_address0,
        local_input_65_ce0,
        local_input_65_we0,
        local_input_65_d0,
        local_input_66_address0,
        local_input_66_ce0,
        local_input_66_we0,
        local_input_66_d0,
        local_input_67_address0,
        local_input_67_ce0,
        local_input_67_we0,
        local_input_67_d0,
        local_input_68_address0,
        local_input_68_ce0,
        local_input_68_we0,
        local_input_68_d0,
        local_input_69_address0,
        local_input_69_ce0,
        local_input_69_we0,
        local_input_69_d0,
        local_input_70_address0,
        local_input_70_ce0,
        local_input_70_we0,
        local_input_70_d0,
        local_input_71_address0,
        local_input_71_ce0,
        local_input_71_we0,
        local_input_71_d0,
        local_input_72_address0,
        local_input_72_ce0,
        local_input_72_we0,
        local_input_72_d0,
        local_input_73_address0,
        local_input_73_ce0,
        local_input_73_we0,
        local_input_73_d0,
        local_input_74_address0,
        local_input_74_ce0,
        local_input_74_we0,
        local_input_74_d0,
        local_input_75_address0,
        local_input_75_ce0,
        local_input_75_we0,
        local_input_75_d0,
        local_input_76_address0,
        local_input_76_ce0,
        local_input_76_we0,
        local_input_76_d0,
        local_input_77_address0,
        local_input_77_ce0,
        local_input_77_we0,
        local_input_77_d0,
        local_input_78_address0,
        local_input_78_ce0,
        local_input_78_we0,
        local_input_78_d0,
        local_input_79_address0,
        local_input_79_ce0,
        local_input_79_we0,
        local_input_79_d0,
        local_input_80_address0,
        local_input_80_ce0,
        local_input_80_we0,
        local_input_80_d0,
        local_input_81_address0,
        local_input_81_ce0,
        local_input_81_we0,
        local_input_81_d0,
        local_input_82_address0,
        local_input_82_ce0,
        local_input_82_we0,
        local_input_82_d0,
        local_input_83_address0,
        local_input_83_ce0,
        local_input_83_we0,
        local_input_83_d0,
        local_input_84_address0,
        local_input_84_ce0,
        local_input_84_we0,
        local_input_84_d0,
        local_input_85_address0,
        local_input_85_ce0,
        local_input_85_we0,
        local_input_85_d0,
        local_input_86_address0,
        local_input_86_ce0,
        local_input_86_we0,
        local_input_86_d0,
        local_input_87_address0,
        local_input_87_ce0,
        local_input_87_we0,
        local_input_87_d0,
        local_input_88_address0,
        local_input_88_ce0,
        local_input_88_we0,
        local_input_88_d0,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] local_input_61_address0;
output   local_input_61_ce0;
output   local_input_61_we0;
output  [15:0] local_input_61_d0;
output  [3:0] local_input_62_address0;
output   local_input_62_ce0;
output   local_input_62_we0;
output  [15:0] local_input_62_d0;
output  [3:0] local_input_63_address0;
output   local_input_63_ce0;
output   local_input_63_we0;
output  [15:0] local_input_63_d0;
output  [3:0] local_input_64_address0;
output   local_input_64_ce0;
output   local_input_64_we0;
output  [15:0] local_input_64_d0;
output  [3:0] local_input_65_address0;
output   local_input_65_ce0;
output   local_input_65_we0;
output  [15:0] local_input_65_d0;
output  [3:0] local_input_66_address0;
output   local_input_66_ce0;
output   local_input_66_we0;
output  [15:0] local_input_66_d0;
output  [3:0] local_input_67_address0;
output   local_input_67_ce0;
output   local_input_67_we0;
output  [15:0] local_input_67_d0;
output  [3:0] local_input_68_address0;
output   local_input_68_ce0;
output   local_input_68_we0;
output  [15:0] local_input_68_d0;
output  [3:0] local_input_69_address0;
output   local_input_69_ce0;
output   local_input_69_we0;
output  [15:0] local_input_69_d0;
output  [3:0] local_input_70_address0;
output   local_input_70_ce0;
output   local_input_70_we0;
output  [15:0] local_input_70_d0;
output  [3:0] local_input_71_address0;
output   local_input_71_ce0;
output   local_input_71_we0;
output  [15:0] local_input_71_d0;
output  [3:0] local_input_72_address0;
output   local_input_72_ce0;
output   local_input_72_we0;
output  [15:0] local_input_72_d0;
output  [3:0] local_input_73_address0;
output   local_input_73_ce0;
output   local_input_73_we0;
output  [15:0] local_input_73_d0;
output  [3:0] local_input_74_address0;
output   local_input_74_ce0;
output   local_input_74_we0;
output  [15:0] local_input_74_d0;
output  [3:0] local_input_75_address0;
output   local_input_75_ce0;
output   local_input_75_we0;
output  [15:0] local_input_75_d0;
output  [3:0] local_input_76_address0;
output   local_input_76_ce0;
output   local_input_76_we0;
output  [15:0] local_input_76_d0;
output  [3:0] local_input_77_address0;
output   local_input_77_ce0;
output   local_input_77_we0;
output  [15:0] local_input_77_d0;
output  [3:0] local_input_78_address0;
output   local_input_78_ce0;
output   local_input_78_we0;
output  [15:0] local_input_78_d0;
output  [3:0] local_input_79_address0;
output   local_input_79_ce0;
output   local_input_79_we0;
output  [15:0] local_input_79_d0;
output  [3:0] local_input_80_address0;
output   local_input_80_ce0;
output   local_input_80_we0;
output  [15:0] local_input_80_d0;
output  [3:0] local_input_81_address0;
output   local_input_81_ce0;
output   local_input_81_we0;
output  [15:0] local_input_81_d0;
output  [3:0] local_input_82_address0;
output   local_input_82_ce0;
output   local_input_82_we0;
output  [15:0] local_input_82_d0;
output  [3:0] local_input_83_address0;
output   local_input_83_ce0;
output   local_input_83_we0;
output  [15:0] local_input_83_d0;
output  [3:0] local_input_84_address0;
output   local_input_84_ce0;
output   local_input_84_we0;
output  [15:0] local_input_84_d0;
output  [3:0] local_input_85_address0;
output   local_input_85_ce0;
output   local_input_85_we0;
output  [15:0] local_input_85_d0;
output  [3:0] local_input_86_address0;
output   local_input_86_ce0;
output   local_input_86_we0;
output  [15:0] local_input_86_d0;
output  [3:0] local_input_87_address0;
output   local_input_87_ce0;
output   local_input_87_we0;
output  [15:0] local_input_87_d0;
output  [3:0] local_input_88_address0;
output   local_input_88_ce0;
output   local_input_88_we0;
output  [15:0] local_input_88_d0;
output  [9:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [9:0] input_r_address1;
output   input_r_ce1;
input  [15:0] input_r_q1;

reg ap_idle;
reg local_input_61_ce0;
reg local_input_61_we0;
reg local_input_62_ce0;
reg local_input_62_we0;
reg local_input_63_ce0;
reg local_input_63_we0;
reg local_input_64_ce0;
reg local_input_64_we0;
reg local_input_65_ce0;
reg local_input_65_we0;
reg local_input_66_ce0;
reg local_input_66_we0;
reg local_input_67_ce0;
reg local_input_67_we0;
reg local_input_68_ce0;
reg local_input_68_we0;
reg local_input_69_ce0;
reg local_input_69_we0;
reg local_input_70_ce0;
reg local_input_70_we0;
reg local_input_71_ce0;
reg local_input_71_we0;
reg local_input_72_ce0;
reg local_input_72_we0;
reg local_input_73_ce0;
reg local_input_73_we0;
reg local_input_74_ce0;
reg local_input_74_we0;
reg local_input_75_ce0;
reg local_input_75_we0;
reg local_input_76_ce0;
reg local_input_76_we0;
reg local_input_77_ce0;
reg local_input_77_we0;
reg local_input_78_ce0;
reg local_input_78_we0;
reg local_input_79_ce0;
reg local_input_79_we0;
reg local_input_80_ce0;
reg local_input_80_we0;
reg local_input_81_ce0;
reg local_input_81_we0;
reg local_input_82_ce0;
reg local_input_82_we0;
reg local_input_83_ce0;
reg local_input_83_we0;
reg local_input_84_ce0;
reg local_input_84_we0;
reg local_input_85_ce0;
reg local_input_85_we0;
reg local_input_86_ce0;
reg local_input_86_we0;
reg local_input_87_ce0;
reg local_input_87_we0;
reg local_input_88_ce0;
reg local_input_88_we0;
reg input_r_ce0;
reg input_r_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln21_fu_573_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [4:0] j_reg_633;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln23_70_fu_589_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln23_72_fu_616_p1;
reg   [4:0] j_10_fu_116;
wire   [4:0] add_ln21_fu_594_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_j;
wire   [8:0] zext_ln23_fu_579_p1;
wire   [8:0] add_ln23_16_fu_583_p2;
wire   [4:0] or_ln21_fu_600_p2;
wire   [8:0] zext_ln23_71_fu_606_p1;
wire   [8:0] add_ln23_17_fu_610_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 j_10_fu_116 = 5'd0;
#0 ap_done_reg = 1'b0;
end

cnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln21_fu_573_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_10_fu_116 <= add_ln21_fu_594_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_10_fu_116 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_633 <= ap_sig_allocacmp_j;
    end
end

always @ (*) begin
    if (((icmp_ln21_fu_573_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j = 5'd0;
    end else begin
        ap_sig_allocacmp_j = j_10_fu_116;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_61_ce0 = 1'b1;
    end else begin
        local_input_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_61_we0 = 1'b1;
    end else begin
        local_input_61_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_62_ce0 = 1'b1;
    end else begin
        local_input_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_62_we0 = 1'b1;
    end else begin
        local_input_62_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_63_ce0 = 1'b1;
    end else begin
        local_input_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_63_we0 = 1'b1;
    end else begin
        local_input_63_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_64_ce0 = 1'b1;
    end else begin
        local_input_64_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_64_we0 = 1'b1;
    end else begin
        local_input_64_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_65_ce0 = 1'b1;
    end else begin
        local_input_65_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_65_we0 = 1'b1;
    end else begin
        local_input_65_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_66_ce0 = 1'b1;
    end else begin
        local_input_66_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_66_we0 = 1'b1;
    end else begin
        local_input_66_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_67_ce0 = 1'b1;
    end else begin
        local_input_67_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_67_we0 = 1'b1;
    end else begin
        local_input_67_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_68_ce0 = 1'b1;
    end else begin
        local_input_68_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_68_we0 = 1'b1;
    end else begin
        local_input_68_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_69_ce0 = 1'b1;
    end else begin
        local_input_69_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_69_we0 = 1'b1;
    end else begin
        local_input_69_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_70_ce0 = 1'b1;
    end else begin
        local_input_70_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_70_we0 = 1'b1;
    end else begin
        local_input_70_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_71_ce0 = 1'b1;
    end else begin
        local_input_71_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_71_we0 = 1'b1;
    end else begin
        local_input_71_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_72_ce0 = 1'b1;
    end else begin
        local_input_72_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_72_we0 = 1'b1;
    end else begin
        local_input_72_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_73_ce0 = 1'b1;
    end else begin
        local_input_73_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_73_we0 = 1'b1;
    end else begin
        local_input_73_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_74_ce0 = 1'b1;
    end else begin
        local_input_74_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_74_we0 = 1'b1;
    end else begin
        local_input_74_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_75_ce0 = 1'b1;
    end else begin
        local_input_75_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_75_we0 = 1'b1;
    end else begin
        local_input_75_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_76_ce0 = 1'b1;
    end else begin
        local_input_76_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_76_we0 = 1'b1;
    end else begin
        local_input_76_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_77_ce0 = 1'b1;
    end else begin
        local_input_77_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd16) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_77_we0 = 1'b1;
    end else begin
        local_input_77_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_78_ce0 = 1'b1;
    end else begin
        local_input_78_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd16) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_78_we0 = 1'b1;
    end else begin
        local_input_78_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_79_ce0 = 1'b1;
    end else begin
        local_input_79_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd18) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_79_we0 = 1'b1;
    end else begin
        local_input_79_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_80_ce0 = 1'b1;
    end else begin
        local_input_80_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd18) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_80_we0 = 1'b1;
    end else begin
        local_input_80_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_81_ce0 = 1'b1;
    end else begin
        local_input_81_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd20) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_81_we0 = 1'b1;
    end else begin
        local_input_81_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_82_ce0 = 1'b1;
    end else begin
        local_input_82_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd20) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_82_we0 = 1'b1;
    end else begin
        local_input_82_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_83_ce0 = 1'b1;
    end else begin
        local_input_83_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd22) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_83_we0 = 1'b1;
    end else begin
        local_input_83_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_84_ce0 = 1'b1;
    end else begin
        local_input_84_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd22) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_84_we0 = 1'b1;
    end else begin
        local_input_84_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_85_ce0 = 1'b1;
    end else begin
        local_input_85_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd24) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_85_we0 = 1'b1;
    end else begin
        local_input_85_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_86_ce0 = 1'b1;
    end else begin
        local_input_86_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_reg_633 == 5'd24) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_86_we0 = 1'b1;
    end else begin
        local_input_86_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_87_ce0 = 1'b1;
    end else begin
        local_input_87_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(j_reg_633 == 5'd0) & ~(j_reg_633 == 5'd2) & ~(j_reg_633 == 5'd4) & ~(j_reg_633 == 5'd6) & ~(j_reg_633 == 5'd8) & ~(j_reg_633 == 5'd10) & ~(j_reg_633 == 5'd12) & ~(j_reg_633 == 5'd14) & ~(j_reg_633 == 5'd16) & ~(j_reg_633 == 5'd18) & ~(j_reg_633 == 5'd20) & ~(j_reg_633 == 5'd22) & ~(j_reg_633 == 5'd24) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_87_we0 = 1'b1;
    end else begin
        local_input_87_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_88_ce0 = 1'b1;
    end else begin
        local_input_88_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(j_reg_633 == 5'd0) & ~(j_reg_633 == 5'd2) & ~(j_reg_633 == 5'd4) & ~(j_reg_633 == 5'd6) & ~(j_reg_633 == 5'd8) & ~(j_reg_633 == 5'd10) & ~(j_reg_633 == 5'd12) & ~(j_reg_633 == 5'd14) & ~(j_reg_633 == 5'd16) & ~(j_reg_633 == 5'd18) & ~(j_reg_633 == 5'd20) & ~(j_reg_633 == 5'd22) & ~(j_reg_633 == 5'd24) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_88_we0 = 1'b1;
    end else begin
        local_input_88_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln21_fu_594_p2 = (ap_sig_allocacmp_j + 5'd2);

assign add_ln23_16_fu_583_p2 = ($signed(zext_ln23_fu_579_p1) + $signed(9'd280));

assign add_ln23_17_fu_610_p2 = ($signed(zext_ln23_71_fu_606_p1) + $signed(9'd280));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln21_fu_573_p2 = ((ap_sig_allocacmp_j < 5'd28) ? 1'b1 : 1'b0);

assign input_r_address0 = zext_ln23_72_fu_616_p1;

assign input_r_address1 = zext_ln23_70_fu_589_p1;

assign local_input_61_address0 = 64'd3;

assign local_input_61_d0 = input_r_q1;

assign local_input_62_address0 = 64'd3;

assign local_input_62_d0 = input_r_q0;

assign local_input_63_address0 = 64'd3;

assign local_input_63_d0 = input_r_q1;

assign local_input_64_address0 = 64'd3;

assign local_input_64_d0 = input_r_q0;

assign local_input_65_address0 = 64'd3;

assign local_input_65_d0 = input_r_q1;

assign local_input_66_address0 = 64'd3;

assign local_input_66_d0 = input_r_q0;

assign local_input_67_address0 = 64'd3;

assign local_input_67_d0 = input_r_q1;

assign local_input_68_address0 = 64'd3;

assign local_input_68_d0 = input_r_q0;

assign local_input_69_address0 = 64'd3;

assign local_input_69_d0 = input_r_q1;

assign local_input_70_address0 = 64'd3;

assign local_input_70_d0 = input_r_q0;

assign local_input_71_address0 = 64'd3;

assign local_input_71_d0 = input_r_q1;

assign local_input_72_address0 = 64'd3;

assign local_input_72_d0 = input_r_q0;

assign local_input_73_address0 = 64'd3;

assign local_input_73_d0 = input_r_q1;

assign local_input_74_address0 = 64'd3;

assign local_input_74_d0 = input_r_q0;

assign local_input_75_address0 = 64'd3;

assign local_input_75_d0 = input_r_q1;

assign local_input_76_address0 = 64'd3;

assign local_input_76_d0 = input_r_q0;

assign local_input_77_address0 = 64'd3;

assign local_input_77_d0 = input_r_q1;

assign local_input_78_address0 = 64'd3;

assign local_input_78_d0 = input_r_q0;

assign local_input_79_address0 = 64'd3;

assign local_input_79_d0 = input_r_q1;

assign local_input_80_address0 = 64'd3;

assign local_input_80_d0 = input_r_q0;

assign local_input_81_address0 = 64'd3;

assign local_input_81_d0 = input_r_q1;

assign local_input_82_address0 = 64'd3;

assign local_input_82_d0 = input_r_q0;

assign local_input_83_address0 = 64'd3;

assign local_input_83_d0 = input_r_q1;

assign local_input_84_address0 = 64'd3;

assign local_input_84_d0 = input_r_q0;

assign local_input_85_address0 = 64'd3;

assign local_input_85_d0 = input_r_q1;

assign local_input_86_address0 = 64'd3;

assign local_input_86_d0 = input_r_q0;

assign local_input_87_address0 = 64'd3;

assign local_input_87_d0 = input_r_q1;

assign local_input_88_address0 = 64'd3;

assign local_input_88_d0 = input_r_q0;

assign or_ln21_fu_600_p2 = (ap_sig_allocacmp_j | 5'd1);

assign zext_ln23_70_fu_589_p1 = add_ln23_16_fu_583_p2;

assign zext_ln23_71_fu_606_p1 = or_ln21_fu_600_p2;

assign zext_ln23_72_fu_616_p1 = add_ln23_17_fu_610_p2;

assign zext_ln23_fu_579_p1 = ap_sig_allocacmp_j;

endmodule //cnn_cnn_Pipeline_VITIS_LOOP_21_210
