-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_cnn_Pipeline_VITIS_LOOP_21_23 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    local_input_31_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_31_ce0 : OUT STD_LOGIC;
    local_input_31_we0 : OUT STD_LOGIC;
    local_input_31_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_32_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_32_ce0 : OUT STD_LOGIC;
    local_input_32_we0 : OUT STD_LOGIC;
    local_input_32_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_33_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_33_ce0 : OUT STD_LOGIC;
    local_input_33_we0 : OUT STD_LOGIC;
    local_input_33_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_34_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_34_ce0 : OUT STD_LOGIC;
    local_input_34_we0 : OUT STD_LOGIC;
    local_input_34_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_35_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_35_ce0 : OUT STD_LOGIC;
    local_input_35_we0 : OUT STD_LOGIC;
    local_input_35_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_36_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_36_ce0 : OUT STD_LOGIC;
    local_input_36_we0 : OUT STD_LOGIC;
    local_input_36_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_37_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_37_ce0 : OUT STD_LOGIC;
    local_input_37_we0 : OUT STD_LOGIC;
    local_input_37_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_38_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_38_ce0 : OUT STD_LOGIC;
    local_input_38_we0 : OUT STD_LOGIC;
    local_input_38_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_39_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_39_ce0 : OUT STD_LOGIC;
    local_input_39_we0 : OUT STD_LOGIC;
    local_input_39_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_40_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_40_ce0 : OUT STD_LOGIC;
    local_input_40_we0 : OUT STD_LOGIC;
    local_input_40_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_41_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_41_ce0 : OUT STD_LOGIC;
    local_input_41_we0 : OUT STD_LOGIC;
    local_input_41_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_42_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_42_ce0 : OUT STD_LOGIC;
    local_input_42_we0 : OUT STD_LOGIC;
    local_input_42_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_43_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_43_ce0 : OUT STD_LOGIC;
    local_input_43_we0 : OUT STD_LOGIC;
    local_input_43_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_44_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_44_ce0 : OUT STD_LOGIC;
    local_input_44_we0 : OUT STD_LOGIC;
    local_input_44_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_45_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_45_ce0 : OUT STD_LOGIC;
    local_input_45_we0 : OUT STD_LOGIC;
    local_input_45_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_46_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_46_ce0 : OUT STD_LOGIC;
    local_input_46_we0 : OUT STD_LOGIC;
    local_input_46_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_47_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_47_ce0 : OUT STD_LOGIC;
    local_input_47_we0 : OUT STD_LOGIC;
    local_input_47_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_48_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_48_ce0 : OUT STD_LOGIC;
    local_input_48_we0 : OUT STD_LOGIC;
    local_input_48_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_49_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_49_ce0 : OUT STD_LOGIC;
    local_input_49_we0 : OUT STD_LOGIC;
    local_input_49_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_50_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_50_ce0 : OUT STD_LOGIC;
    local_input_50_we0 : OUT STD_LOGIC;
    local_input_50_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_51_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_51_ce0 : OUT STD_LOGIC;
    local_input_51_we0 : OUT STD_LOGIC;
    local_input_51_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_52_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_52_ce0 : OUT STD_LOGIC;
    local_input_52_we0 : OUT STD_LOGIC;
    local_input_52_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_53_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_53_ce0 : OUT STD_LOGIC;
    local_input_53_we0 : OUT STD_LOGIC;
    local_input_53_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_54_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_54_ce0 : OUT STD_LOGIC;
    local_input_54_we0 : OUT STD_LOGIC;
    local_input_54_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_55_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_55_ce0 : OUT STD_LOGIC;
    local_input_55_we0 : OUT STD_LOGIC;
    local_input_55_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_56_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_56_ce0 : OUT STD_LOGIC;
    local_input_56_we0 : OUT STD_LOGIC;
    local_input_56_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_57_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_57_ce0 : OUT STD_LOGIC;
    local_input_57_we0 : OUT STD_LOGIC;
    local_input_57_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    local_input_58_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    local_input_58_ce0 : OUT STD_LOGIC;
    local_input_58_we0 : OUT STD_LOGIC;
    local_input_58_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of cnn_cnn_Pipeline_VITIS_LOOP_21_23 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv7_54 : STD_LOGIC_VECTOR (6 downto 0) := "1010100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln21_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal j_reg_633 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln23_17_fu_589_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln23_19_fu_616_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_3_fu_116 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal add_ln21_fu_594_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln23_fu_579_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln23_4_fu_583_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln21_fu_600_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln23_18_fu_606_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln23_5_fu_610_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component cnn_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    j_3_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln21_fu_573_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_3_fu_116 <= add_ln21_fu_594_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_3_fu_116 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                j_reg_633 <= ap_sig_allocacmp_j;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln21_fu_594_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j) + unsigned(ap_const_lv5_2));
    add_ln23_4_fu_583_p2 <= std_logic_vector(unsigned(zext_ln23_fu_579_p1) + unsigned(ap_const_lv7_54));
    add_ln23_5_fu_610_p2 <= std_logic_vector(unsigned(zext_ln23_18_fu_606_p1) + unsigned(ap_const_lv7_54));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln21_fu_573_p2)
    begin
        if (((icmp_ln21_fu_573_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_3_fu_116, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_j <= j_3_fu_116;
        end if; 
    end process;

    icmp_ln21_fu_573_p2 <= "1" when (unsigned(ap_sig_allocacmp_j) < unsigned(ap_const_lv5_1C)) else "0";
    input_r_address0 <= zext_ln23_19_fu_616_p1(10 - 1 downto 0);
    input_r_address1 <= zext_ln23_17_fu_589_p1(10 - 1 downto 0);

    input_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_r_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_r_ce1 <= ap_const_logic_1;
        else 
            input_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_31_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_31_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_31_ce0 <= ap_const_logic_1;
        else 
            local_input_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_31_d0 <= input_r_q1;

    local_input_31_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_31_we0 <= ap_const_logic_1;
        else 
            local_input_31_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_32_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_32_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_32_ce0 <= ap_const_logic_1;
        else 
            local_input_32_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_32_d0 <= input_r_q0;

    local_input_32_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_32_we0 <= ap_const_logic_1;
        else 
            local_input_32_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_33_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_33_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_33_ce0 <= ap_const_logic_1;
        else 
            local_input_33_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_33_d0 <= input_r_q1;

    local_input_33_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_33_we0 <= ap_const_logic_1;
        else 
            local_input_33_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_34_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_34_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_34_ce0 <= ap_const_logic_1;
        else 
            local_input_34_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_34_d0 <= input_r_q0;

    local_input_34_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_34_we0 <= ap_const_logic_1;
        else 
            local_input_34_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_35_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_35_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_35_ce0 <= ap_const_logic_1;
        else 
            local_input_35_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_35_d0 <= input_r_q1;

    local_input_35_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_35_we0 <= ap_const_logic_1;
        else 
            local_input_35_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_36_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_36_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_36_ce0 <= ap_const_logic_1;
        else 
            local_input_36_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_36_d0 <= input_r_q0;

    local_input_36_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_36_we0 <= ap_const_logic_1;
        else 
            local_input_36_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_37_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_37_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_37_ce0 <= ap_const_logic_1;
        else 
            local_input_37_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_37_d0 <= input_r_q1;

    local_input_37_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_37_we0 <= ap_const_logic_1;
        else 
            local_input_37_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_38_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_38_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_38_ce0 <= ap_const_logic_1;
        else 
            local_input_38_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_38_d0 <= input_r_q0;

    local_input_38_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_38_we0 <= ap_const_logic_1;
        else 
            local_input_38_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_39_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_39_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_39_ce0 <= ap_const_logic_1;
        else 
            local_input_39_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_39_d0 <= input_r_q1;

    local_input_39_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_39_we0 <= ap_const_logic_1;
        else 
            local_input_39_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_40_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_40_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_40_ce0 <= ap_const_logic_1;
        else 
            local_input_40_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_40_d0 <= input_r_q0;

    local_input_40_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_40_we0 <= ap_const_logic_1;
        else 
            local_input_40_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_41_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_41_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_41_ce0 <= ap_const_logic_1;
        else 
            local_input_41_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_41_d0 <= input_r_q1;

    local_input_41_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_A) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_41_we0 <= ap_const_logic_1;
        else 
            local_input_41_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_42_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_42_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_42_ce0 <= ap_const_logic_1;
        else 
            local_input_42_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_42_d0 <= input_r_q0;

    local_input_42_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_A) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_42_we0 <= ap_const_logic_1;
        else 
            local_input_42_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_43_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_43_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_43_ce0 <= ap_const_logic_1;
        else 
            local_input_43_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_43_d0 <= input_r_q1;

    local_input_43_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_C) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_43_we0 <= ap_const_logic_1;
        else 
            local_input_43_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_44_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_44_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_44_ce0 <= ap_const_logic_1;
        else 
            local_input_44_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_44_d0 <= input_r_q0;

    local_input_44_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_C) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_44_we0 <= ap_const_logic_1;
        else 
            local_input_44_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_45_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_45_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_45_ce0 <= ap_const_logic_1;
        else 
            local_input_45_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_45_d0 <= input_r_q1;

    local_input_45_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_E) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_45_we0 <= ap_const_logic_1;
        else 
            local_input_45_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_46_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_46_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_46_ce0 <= ap_const_logic_1;
        else 
            local_input_46_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_46_d0 <= input_r_q0;

    local_input_46_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_E) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_46_we0 <= ap_const_logic_1;
        else 
            local_input_46_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_47_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_47_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_47_ce0 <= ap_const_logic_1;
        else 
            local_input_47_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_47_d0 <= input_r_q1;

    local_input_47_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_47_we0 <= ap_const_logic_1;
        else 
            local_input_47_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_48_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_48_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_48_ce0 <= ap_const_logic_1;
        else 
            local_input_48_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_48_d0 <= input_r_q0;

    local_input_48_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_48_we0 <= ap_const_logic_1;
        else 
            local_input_48_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_49_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_49_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_49_ce0 <= ap_const_logic_1;
        else 
            local_input_49_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_49_d0 <= input_r_q1;

    local_input_49_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_49_we0 <= ap_const_logic_1;
        else 
            local_input_49_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_50_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_50_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_50_ce0 <= ap_const_logic_1;
        else 
            local_input_50_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_50_d0 <= input_r_q0;

    local_input_50_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_50_we0 <= ap_const_logic_1;
        else 
            local_input_50_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_51_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_51_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_51_ce0 <= ap_const_logic_1;
        else 
            local_input_51_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_51_d0 <= input_r_q1;

    local_input_51_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_51_we0 <= ap_const_logic_1;
        else 
            local_input_51_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_52_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_52_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_52_ce0 <= ap_const_logic_1;
        else 
            local_input_52_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_52_d0 <= input_r_q0;

    local_input_52_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_52_we0 <= ap_const_logic_1;
        else 
            local_input_52_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_53_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_53_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_53_ce0 <= ap_const_logic_1;
        else 
            local_input_53_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_53_d0 <= input_r_q1;

    local_input_53_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_53_we0 <= ap_const_logic_1;
        else 
            local_input_53_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_54_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_54_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_54_ce0 <= ap_const_logic_1;
        else 
            local_input_54_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_54_d0 <= input_r_q0;

    local_input_54_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_54_we0 <= ap_const_logic_1;
        else 
            local_input_54_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_55_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_55_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_55_ce0 <= ap_const_logic_1;
        else 
            local_input_55_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_55_d0 <= input_r_q1;

    local_input_55_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_18) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_55_we0 <= ap_const_logic_1;
        else 
            local_input_55_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_56_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_56_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_56_ce0 <= ap_const_logic_1;
        else 
            local_input_56_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_56_d0 <= input_r_q0;

    local_input_56_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (j_reg_633 = ap_const_lv5_18) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_56_we0 <= ap_const_logic_1;
        else 
            local_input_56_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_57_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_57_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_57_ce0 <= ap_const_logic_1;
        else 
            local_input_57_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_57_d0 <= input_r_q1;

    local_input_57_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if ((not((j_reg_633 = ap_const_lv5_0)) and not((j_reg_633 = ap_const_lv5_2)) and not((j_reg_633 = ap_const_lv5_4)) and not((j_reg_633 = ap_const_lv5_6)) and not((j_reg_633 = ap_const_lv5_8)) and not((j_reg_633 = ap_const_lv5_A)) and not((j_reg_633 = ap_const_lv5_C)) and not((j_reg_633 = ap_const_lv5_E)) and not((j_reg_633 = ap_const_lv5_10)) and not((j_reg_633 = ap_const_lv5_12)) and not((j_reg_633 = ap_const_lv5_14)) and not((j_reg_633 = ap_const_lv5_16)) and not((j_reg_633 = ap_const_lv5_18)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_57_we0 <= ap_const_logic_1;
        else 
            local_input_57_we0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_58_address0 <= ap_const_lv64_1(4 - 1 downto 0);

    local_input_58_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_58_ce0 <= ap_const_logic_1;
        else 
            local_input_58_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_input_58_d0 <= input_r_q0;

    local_input_58_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_633, ap_block_pp0_stage0_11001)
    begin
        if ((not((j_reg_633 = ap_const_lv5_0)) and not((j_reg_633 = ap_const_lv5_2)) and not((j_reg_633 = ap_const_lv5_4)) and not((j_reg_633 = ap_const_lv5_6)) and not((j_reg_633 = ap_const_lv5_8)) and not((j_reg_633 = ap_const_lv5_A)) and not((j_reg_633 = ap_const_lv5_C)) and not((j_reg_633 = ap_const_lv5_E)) and not((j_reg_633 = ap_const_lv5_10)) and not((j_reg_633 = ap_const_lv5_12)) and not((j_reg_633 = ap_const_lv5_14)) and not((j_reg_633 = ap_const_lv5_16)) and not((j_reg_633 = ap_const_lv5_18)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_58_we0 <= ap_const_logic_1;
        else 
            local_input_58_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln21_fu_600_p2 <= (ap_sig_allocacmp_j or ap_const_lv5_1);
    zext_ln23_17_fu_589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_4_fu_583_p2),64));
    zext_ln23_18_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln21_fu_600_p2),7));
    zext_ln23_19_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_5_fu_610_p2),64));
    zext_ln23_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_j),7));
end behav;
